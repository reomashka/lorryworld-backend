services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: backend_app
        ports:
            - '3001:3000'
        env_file:
            - .env
            - .env.docker
        depends_on:
            - postgres
            - redis
        volumes:
            - .:/app
            - /app/node_modules
        networks:
            - shared_net
            - backend_network
        restart: always
        healthcheck:
            test:
                [
                    'CMD',
                    'pg_isready',
                    '-U',
                    '${POSTGRES_USER}',
                    '-d',
                    '${POSTGRES_DB}'
                ]
            interval: 10s
            retries: 5

    postgres:
        container_name: postgres
        image: postgres:15
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - '5432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - backend_network
            - shared_net
        env_file:
            - .env
        restart: always

    redis:
        container_name: redis
        image: redis:5.0
        restart: always
        ports:
            - '6379:6379'
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis_data:/data
        networks:
            - backend_network
        env_file:
            - .env

volumes:
    postgres_data:
    redis_data:

networks:
    shared_net:
        external: true
    backend_network:
        driver: bridge
