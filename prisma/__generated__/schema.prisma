generator client {
  provider      = "prisma-client-js"
  output        = "./__generated__"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id          String  @id @default(uuid())
  displayName String  @unique @map("display_name")
  email       String? @unique
  balance     Int     @default(0)
  contact     String?

  role       UserRole   @default(REGULAR)
  isVerified Boolean    @default(false) @map("is_verified")
  method     AuthMethod @default(CREDENTIALS)
  createdAt  DateTime?  @default(now()) @map("created_at")
  updatedAt  DateTime?  @updatedAt @map("updated_at")
  password   String

  mediaContact MediaContactType? @map("media_contact")

  payments Payment[]
  items    UserItem[]
  orders   Order[]

  @@map("users")
}

model UserItem {
  id      String @id @default(uuid())
  userId  String
  orderId Int?
  itemId  Int

  quantity  Int
  amount    Int
  status    ItemStatus @default(PURCHASED)
  isIssued  Boolean    @default(false) @map("is_issued")
  updatedAt DateTime?  @updatedAt @map("updated_at")
  createdAt DateTime   @default(now()) @map("created_at")

  user  User   @relation(fields: [userId], references: [id])
  item  Item   @relation(fields: [itemId], references: [id])
  order Order? @relation(fields: [orderId], references: [id])

  @@map("user_items")
}

model Order {
  id     Int    @id @default(autoincrement())
  userId String

  isIssued  Boolean  @default(false) @map("is_issued")
  createdAt DateTime @default(now()) @map("created_at")

  user  User       @relation(fields: [userId], references: [id])
  items UserItem[]

  @@map("orders")
}

model Token {
  id        String    @id @default(uuid())
  email     String
  token     String    @unique
  type      TokenType
  expiresIn DateTime  @map("expires_in")
  createdAt DateTime  @default(now()) @map("created_at")

  @@map("tokens")
}

model Payment {
  id        String        @id @default(uuid())
  userId    String
  amount    Int
  currency  String        @default("RUB")
  type      PaymentType
  status    PaymentStatus
  comment   String?
  createdAt DateTime      @map("created_at")
  invoiceId String        @unique
  users     User          @relation(fields: [userId], references: [id])

  @@map("payments")
}

model Item {
  id           Int        @id @default(autoincrement())
  name         String
  price        Int
  sale         Int?
  availability Boolean    @default(true)
  type         ItemType
  icon         String
  description  String?
  game         String     @default("MM")
  rarity       ItemRarity
  users        UserItem[]

  @@map("items")
}

enum MediaContactType {
  TELEGRAM
  VK
  EMAIL
}

enum ItemStatus {
  PURCHASED
  WITHDRAWN
}

enum ItemRarity {
  Chroma
  Ancients
  Godly
  Vintages
  Corrupt
}

enum ItemType {
  KNIFE
  SET
  PISTOL
  PET
}

enum PaymentType {
  DEPOSIT
  WITHDRAW
  PURCHASE
}

enum PaymentStatus {
  PENDING
  SUCCESS
  CANCELLATION
  REFUNDED
  EXPIRED
  UNKNOWN
}

enum UserRole {
  REGULAR
  ADMIN
}

enum AuthMethod {
  CREDENTIALS
  GOOGLE
  YANDEX
}

enum TokenType {
  VERIFICATION
  TWO_FACTOR
  PASSWORD_RESET
}
